alias: 'wled: battery level gradient reverse'
sequence:
  - service: rest_command.wled_generic
    data:
      ip_address: '{{ ip_address }}'
      payload: >-
        {"on":true,"bri":{{ brightness }},
        "seg":{"i":[start_led-1,stop_led-1,[0,0,0]]}}
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 500
  - service: rest_command.wled_generic
    data_template:
      ip_address: '{{ ip_address }}'
      payload: |

       {% set data = namespace(rgb=[]) %} 
         {% set r = namespace(value=0) %} 
         {% set g = namespace(value=255) %} 
         {% set b = namespace(value=0) %}
         {% set current_led = namespace(value=0) %} 
         {% set reverse = false %}

         {% if stop_led < start_led %}
             {% set reverse = true %}
             {% set temp_stop = stop_led %}            
             {% set stop_led = start_led %}
             {% set start_led = temp_stop %}
         {% endif %}

         {% set total_led_count = (stop_led - start_led) + 1 %}

         {% set r_count = (total_led_count * 0.25)|round %}
         {% set g_count = total_led_count - r_count %}
         
         {# Ã¶ka R #} 
          {% if r_count > 0 %}
            {% set r_increment = (255/r_count) | round %}
            {% for i in range(0, r_count) %}             
        
              {% if current_led.value < active_led_count %}
                {% set data.rgb = data.rgb + [[r.value,g.value,b.value]] %}
                {% if r.value < 255 %}
                  {% set r.value = min(255, r.value + r_increment) %}    
                {% endif %}
              {% else %}
                {% set data.rgb = data.rgb + [[0,0,0]] %}
              {% endif %}

              {% set current_led.value = current_led.value +1 %}
            {% endfor %}
        {% endif %}

         {# minska G #} 

         {% if g_count > 0 %}
           {% set g_decrement = (255/g_count) | round %}
           {% for i in range(0, g_count) %}
             {% set data.rgb = data.rgb + [[r.value,g.value,b.value]] %}
             {% if g.value > 0 %}
               {% set g.value =  max(0, g.value - g_decrement) %}    
             {% endif %}        
           {% endfor %}
         {% endif %}

          {# Minska G #} 
          {% if g_count > 0 %}
            {% set r_decrement = (255/g_count) | round %}
            {% for i in range(0, g_count) %}
              {% if current_led.value < active_led_count %}
                {% set data.rgb = data.rgb + [[r.value,g.value,b.value]] %}
                {% if g.value > 0 %}
                  {% set g.value =  max(0, g.value - g_decrement) %}    
                {% endif %}
              {% else %}
                  {% set data.rgb = data.rgb + [[0,0,0]] %}
              {% endif %}

              {% set current_led.value = current_led.value +1 %}
            {% endfor %}
          {% endif %}
          
         {% set rgb = namespace(value="") %}
         {% for x in data.rgb %}     
           {% if reverse == true %}
             {% set rgb.value = rgb.value + ((stop_led - loop.index) | string) + ',' + (x | string) + ',' %}
           {% else %}
             {% set rgb.value = rgb.value + ((loop.index-1 + start_led-1) | string) + ',' + (x | string) + ',' %}
           {% endif %}            
         {% endfor%}

         {% set rgb.value  = rgb.value[:-1] %}

         {{ '{"seg":{"i":[' + rgb.value + ']}}'}}
mode: queued
max: 10
